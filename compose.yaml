services:
  postgres:
    image: postgres:17.0-alpine
    container_name: library-postgres
    env_file: $RECALL_PROJECT_PATH/config/postgres.env
    ports:
      - ${POSTGRES_HOST_PORT}:5432
    volumes:
      - pgdata-volume:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U postgres_user -d postgres_db"
      interval: 3s
      timeout: 3s
      start_period: 5s
      retries: 5
    restart: always
  minio-setup:
    container_name: library-minio-setup
    depends_on:
      minio:
        condition: service_healthy
        restart: true
    image: minio/mc:latest
    env_file:
      - $RECALL_PROJECT_PATH/config/minio-server.env
      - $RECALL_PROJECT_PATH/config/minio-client.env
    volumes:
      - minio-volume:/data
      - $RECALL_PROJECT_PATH/config/minio-setup.sh:/setup.sh
    entrypoint: bash /setup.sh
  minio:
    container_name: library-minio
    image: minio/minio:latest
    env_file:
      - $RECALL_PROJECT_PATH/config/minio-server.env
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_BROWSER_PORT}:9001"
    volumes:
      - minio-volume:/data
    command: server --console-address ":9001"
    healthcheck:
      test: "curl -f http://localhost:9000/minio/health/live"
      interval: 50s
      timeout: 10s
      retries: 3
      start_period: 10s
      start_interval: 5s
    restart: always

volumes:
  minio-volume:
    driver_opts:
      type: none
      o: bind
      device: $MINIO_VOLUME_PATH
  pgdata-volume:
    driver_opts:
      type: none
      o: bind
      device: $POSTGRES_VOLUME_PATH
